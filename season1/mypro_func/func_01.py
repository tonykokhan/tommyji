# 函数用法和底层分析：
# 函数是可重用的程序代码块。函数的作用，不仅可以实现代码的复用，更能实现代码的一致性。一致性指的是，
# 只要修改函数的代码，则所有调用该函数的地方都能得到体现。
#
# 在编写函数时，函数体中的代码写法和我们前面讲述的基本一致，只是对代码实现了封装，并增加了函数调用、
# 传递参数、返回计算结果等内容。


# 函数的定义和调用
# 要点：
# 1. 我们使用def来定义函数，然后就是一个空格和函数名称；
# (1) Python执行def时，会创建一个函数对象，并绑定到函数名变量上。
# 2. 参数列表
# (1) 圆括号内是形式参数列表，有多个参数则使用逗号隔开
# (2) 形式参数不需要声明类型，也不需要指定函数返回值类型
# (3) 无参数，也必须保留空的圆括号
# (4) 实参列表必须与形参列表一一对应
# 3. return返回值
# (1) 如果函数体中包含return语句，则结束函数执行并返回值；
# (2) 如果函数体中不包含return语句，则返回None值。
# 4. 调用函数之前，必须要先定义函数，即先调用def创建函数对象
# (1) 内置函数对象会自动创建
# (2) 标准库和第三方库函数，通过import导入模块时，会执行模块中的def语句

# 测试函数的定义和调用


def test01():
    print("*" * 10)
    print("@" * 10)


print(id(test01))
print(type(test01))
print(test01)

# test01()
# test01()
# test01()

for i in range(10):
    test01()
